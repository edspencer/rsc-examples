This example demonstrates the use of React Server Components with `<Suspense>` boundaries to optimize UI rendering. It showcases how to render static content immediately while handling asynchronous data fetching in a non-blocking manner. The main component, `Page`, includes a `DataComponent` that simulates a 3-second data fetch. By wrapping `DataComponent` in a `<Suspense>` boundary, the static content is rendered right away, and a loading placeholder is displayed until the data is ready. Once the data is fetched, it is streamed to the browser as part of the same HTTP request. This approach allows for efficient rendering and improved user experience by minimizing wait times for the user.